import { useState } from "react";
import Head from "next/head";
import { gql, useQuery } from "@apollo/client";
import { Container, Row, Col, Card, Button } from "react-bootstrap";
import { Player } from "video-react";
import * as Icon from "react-bootstrap-icons";
import "bootstrap/dist/css/bootstrap.min.css";
import "node_modules/video-react/dist/video-react.css";
import withApollo from "../lib/withApollo";
import AddVideoModal from "@/components/add-video-modal";
import EditVideoInfoModal from "@/components/edit-video-info-modal";
import DeleteModal from "@/components/delete-modal";
import Loader from "@/components/loader";
import styles from "@/styles/Home.module.css";

export const GET_VIDEOS = gql`
  query {
    videos {
      _id
      url
      title
    }
  }
`;

const Home = () => {
  const { loading, error, data } = useQuery(GET_VIDEOS);
  const [show, setShow] = useState(false);
  const [showDeleteModal, setShowDeleteModal] = useState(false);
  const [showEditModal, setShowEditModal] = useState(false);
  const [selectedVideo, setSelectedVideo] = useState(false);
  if (loading) {
    return <Loader />;
  }

  if (error) return <p>`Error! ${error.message}`</p>;
  const { videos } = data;

  return (
    <>
      <Head>
        <title>Fanfare Demonstration</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mt-2">
        <Container fluid>
          <h2 className="text-light mb-4 text-center">FANFARE DEMONSTRATION</h2>
          <div className="d-grid col-4 gap-2 mx-auto">
            <Button
              variant="primary"
              size="lg"
              className="mb-4 rounded-1"
              onClick={() => {
                setShow(true);
              }}
            >
              Add
            </Button>
          </div>
          <Row>
            {videos.map((video: any) => {
              return (
                <Col md={4} key={video?._id}>
                  <Card className={`mb-4 ${styles.cardDark}`}>
                    <Card.Body>
                      <Card.Title className="mb-3 d-flex justify-content-between align-items-center">
                        {video?.title}
                        <span className="float-end">
                          <Button
                            variant="danger"
                            size="sm"
                            className="rounded-1 me-2"
                            onClick={() => {
                              setShowDeleteModal(true);
                              setSelectedVideo(video);
                            }}
                          >
                            <Icon.Trash2Fill />
                          </Button>
                          <Button
                            variant="primary"
                            size="sm"
                            className="rounded-1 ms-2"
                            onClick={() => {
                              console.log("XXX");
                              setShowEditModal(true);
                              setSelectedVideo(video);
                            }}
                          >
                            <Icon.PencilFill />
                          </Button>
                        </span>
                      </Card.Title>
                      <Player
                        playsInline
                        // poster="/assets/poster.png"
                        src={video?.url}
                      />
                    </Card.Body>
                  </Card>
                </Col>
              );
            })}
          </Row>
        </Container>
      </main>
      <AddVideoModal showModal={show} setShowModal={setShow} />
      <DeleteModal
        showDeleteModal={showDeleteModal}
        setShowDeleteModal={setShowDeleteModal}
        video={selectedVideo}
      />
      <EditVideoInfoModal
        showEditModal={showEditModal}
        setShowEditModal={setShowEditModal}
        video={selectedVideo}
      />
    </>
  );
};

export default withApollo(Home);
